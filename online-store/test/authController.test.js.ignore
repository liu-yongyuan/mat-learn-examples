// tests/authController.test.js
import request from "supertest";
import app from "../server.js";
import { serverConfig } from "../app.js";
import logger from "../utils/logger.js";

let token;
let { baseUrl } = serverConfig;

describe("Authentication and Protected Routes", () => {
    beforeAll(async () => {
        const john = {
            email: "john.doe@example.com",
            password: "password123",
        };
        const res = await request(app).post(`${baseUrl}/login`).send(john);

        console.log(res.body);

        // Check status code
        expect(res.statusCode).toBe(200);

        expect(res.body.token).toBeDefined();

        // Store the token for future use in protected route tests
        token = res.body.token;

        logger.info(`login success, get the token: ${token}, go to the next`);
    });

    it("should fetch all products", async () => {
        const res = await request(app).get(`${baseUrl}/products`);

        // Check status code
        expect(res.statusCode).toBe(200);

        // Check response body structure
        expect(Array.isArray(res.body)).toBe(true);

        // Validate the content of the response
        expect(res.body[0]).toHaveProperty("product_id");
        expect(res.body[0]).toHaveProperty("name");
    });

    it("should add product", async () => {
        let date = new Date();
        const newProducts = {
            name: `SmartPC ${date.toLocaleDateString()}T${date.toLocaleTimeString()}`,
            description: "A high-end SmartPC with a large screen",
            price: 699.99,
            stock_quantity: 50,
            category_id: 2,
        };
        const res = await request(app).post(`${baseUrl}/products`).send(newProducts).set('Authorization', `Bearer ${token}`);

        // Check status code
        expect(res.statusCode).toBe(201);

        expect(res.body.message).toBe('Product added successfully');
    });
});
